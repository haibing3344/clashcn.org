import{_ as e,c as s,o as n,ag as t}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"UDP","description":"UDP（User Datagram Protocol，用户数据报协议）是传输层的一种简单、无连接的通信协议，与TCP相比，UDP更轻量、低延迟，但不提供可靠的传输服务。UDP适用于对数据传输速度和效率要求较高、对可靠性要求较低的应用场景。","frontmatter":{"title":"UDP","description":"UDP（User Datagram Protocol，用户数据报协议）是传输层的一种简单、无连接的通信协议，与TCP相比，UDP更轻量、低延迟，但不提供可靠的传输服务。UDP适用于对数据传输速度和效率要求较高、对可靠性要求较低的应用场景。","head":[["link",{"rel":"canonical","href":"https://www.clashcn.org/wiki/UDP.html"}],["meta",{"property":"og:local","content":"en-US"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:title","content":"UDP | Clash for Windows"}],["meta",{"property":"og:description","content":"UDP（User Datagram Protocol，用户数据报协议）是传输层的一种简单、无连接的通信协议，与TCP相比，UDP更轻量、低延迟，但不提供可靠的传输服务。UDP适用于对数据传输速度和效率要求较高、对可靠性要求较低的应用场景。"}],["meta",{"property":"og:url","content":"https://www.clashcn.org/wiki/UDP.html"}],["meta",{"property":"og:site_name","content":"Clash for Windows"}],["meta",{"property":"og:image","content":"https://www.clashcn.org/android-chrome-192x192.png"}],["meta",{"property":"og:image:width","content":"192"}],["meta",{"property":"og:image:height","content":"192"}],["meta",{"property":"og:image:type","content":"image/png"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"author","content":"Clash for Windows"}],["meta",{"name":"twitter:label1","content":"作者"}],["meta",{"name":"twitter:data1","content":"Clash for Windows"}]]},"headers":[],"relativePath":"wiki/UDP.md","filePath":"wiki/UDP.md"}'),r={name:"wiki/UDP.md"};function l(o,a,p,i,c,d){return n(),s("div",null,a[0]||(a[0]=[t(`<h1 id="udp" tabindex="-1">UDP <a class="header-anchor" href="#udp" aria-label="Permalink to &quot;UDP&quot;">​</a></h1><p>UDP（User Datagram Protocol，用户数据报协议）是传输层的一种简单、无连接的通信协议，与<a href="/wiki/TCP.html">TCP</a>相比，UDP更轻量、低延迟，但不提供可靠的传输服务。UDP适用于对数据传输速度和效率要求较高、对可靠性要求较低的应用场景。</p><h2 id="udp-的特点" tabindex="-1">UDP 的特点 <a class="header-anchor" href="#udp-的特点" aria-label="Permalink to &quot;UDP 的特点&quot;">​</a></h2><ul><li><strong>无连接</strong>：UDP不需要建立连接即可发送数据报文（Datagram），减少了通信开销和延迟。</li><li><strong>不可靠传输</strong>：UDP不保证数据包的顺序和完整性，不提供重传机制，数据包可能丢失、重复或乱序到达。</li><li><strong>轻量级</strong>：UDP头部只有8个字节，相比TCP的头部，UDP开销更小，适合实时性要求高的应用。</li><li><strong>支持广播和多播</strong>：UDP支持广播（Broadcast）和多播（Multicast），可以同时向多个目标发送数据。</li></ul><h2 id="udp-数据包结构" tabindex="-1">UDP 数据包结构 <a class="header-anchor" href="#udp-数据包结构" aria-label="Permalink to &quot;UDP 数据包结构&quot;">​</a></h2><p>UDP数据包的结构非常简单，由以下几个字段组成：</p><ul><li><strong>源端口（Source Port，16位）</strong>：发送方的端口号。</li><li><strong>目的端口（Destination Port，16位）</strong>：接收方的端口号。</li><li><strong>长度（Length，16位）</strong>：UDP头部和数据部分的总长度。</li><li><strong>校验和（Checksum，16位）</strong>：用于错误检测的校验和。</li></ul><p>plaintext</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>+-------------------+-------------------+</span></span>
<span class="line"><span>| Source Port       | Destination Port  |</span></span>
<span class="line"><span>+-------------------+-------------------+</span></span>
<span class="line"><span>| Length            | Checksum          |</span></span>
<span class="line"><span>+-------------------+-------------------+</span></span>
<span class="line"><span>| Data (variable)                        |</span></span>
<span class="line"><span>+---------------------------------------+</span></span></code></pre></div><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><p>UDP适用于对实时性要求高但对可靠性要求不高的应用场景，包括：</p><ul><li><strong>实时音视频传输</strong>：如VoIP、视频会议和在线直播，要求低延迟和高效率，即使有部分数据包丢失也能接受。</li><li><strong>在线游戏</strong>：如多人在线游戏，需要快速响应的通信，允许偶尔的数据丢失。</li><li><strong>DNS查询</strong>：域名系统（DNS）使用UDP进行查询，快速响应用户请求。</li><li><strong>物联网（IoT）设备通信</strong>：许多物联网设备使用UDP进行轻量级、低延迟的数据传输。</li></ul><h2 id="优缺点" tabindex="-1">优缺点 <a class="header-anchor" href="#优缺点" aria-label="Permalink to &quot;优缺点&quot;">​</a></h2><p><strong>优点</strong>：</p><ul><li>低延迟：由于无连接和简单头部，UDP传输延迟较低。</li><li>开销小：UDP头部只有8个字节，通信开销小。</li><li>支持广播和多播：适合需要同时向多个目标发送数据的应用。</li></ul><p><strong>缺点</strong>：</p><ul><li>不可靠：没有重传和确认机制，数据包可能丢失、重复或乱序。</li><li>无流量控制：不具备流量控制机制，容易导致网络拥塞。</li></ul><h2 id="示例-udp通信" tabindex="-1">示例：UDP通信 <a class="header-anchor" href="#示例-udp通信" aria-label="Permalink to &quot;示例：UDP通信&quot;">​</a></h2><p>以下是一个简单的UDP客户端和服务器示例，使用Python实现。</p><h3 id="服务器代码" tabindex="-1">服务器代码 <a class="header-anchor" href="#服务器代码" aria-label="Permalink to &quot;服务器代码&quot;">​</a></h3><p>python</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import socket</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 创建UDP socket</span></span>
<span class="line"><span>server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span></span>
<span class="line"><span>server_socket.bind((&#39;localhost&#39;, 12345))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>print(&quot;UDP服务器在端口12345监听...&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>while True:</span></span>
<span class="line"><span>    data, addr = server_socket.recvfrom(1024)  # 接收数据</span></span>
<span class="line"><span>    print(f&quot;收到来自{addr}的数据：{data.decode()}&quot;)</span></span>
<span class="line"><span>    response = f&quot;已接收：{data.decode()}&quot;</span></span>
<span class="line"><span>    server_socket.sendto(response.encode(), addr)  # 发送响应</span></span></code></pre></div><h3 id="客户端代码" tabindex="-1">客户端代码 <a class="header-anchor" href="#客户端代码" aria-label="Permalink to &quot;客户端代码&quot;">​</a></h3><p>python</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import socket</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 创建UDP socket</span></span>
<span class="line"><span>client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span></span>
<span class="line"><span>server_address = (&#39;localhost&#39;, 12345)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>message = &quot;Hello, UDP Server!&quot;</span></span>
<span class="line"><span>client_socket.sendto(message.encode(), server_address)  # 发送数据</span></span>
<span class="line"><span></span></span>
<span class="line"><span>data, server = client_socket.recvfrom(1024)  # 接收响应</span></span>
<span class="line"><span>print(f&quot;从服务器收到响应：{data.decode()}&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>client_socket.close()</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>UDP是一种简单、快速、低延迟的传输层协议，适用于实时性要求高的应用，如音视频传输、在线游戏和DNS查询。虽然UDP不提供可靠的传输服务，但其轻量级和支持广播、多播的特点使其在许多应用中非常有用。通过合理选择和配置，UDP可以在特定场景下提供高效的网络通信服务。</p><div class="tip custom-block"><p class="custom-block-title">🎉 节点推荐</p><ul><li>🚀 <a href="https://www.cyberguard.best/#/register?code=XsreC0T5" target="_blank" rel="noreferrer">Cyberguard: 解锁Netflix/Hbo/Disney+/Dazn等流媒体,18.00元/月</a><br></li><li>🚀 <a href="https://www.xn--9kqrm7t.com/#/register?code=JRtE5uIV" target="_blank" rel="noreferrer">优信云：IEPL/IPLC 高速专线，￥15.00/月</a><br></li><li>🚀 <a href="https://erwan6.net/auth/register?code=BoObCd" target="_blank" rel="noreferrer">尔湾云：最大峰值1000Mbps，全流媒体及ChatGPT解锁！最低12元/月</a><br></li><li>🚀 <a href="https://haibing822.tntvipaff.cc/#/register?code=GtjJVgml" target="_blank" rel="noreferrer">TNTCloud：新开机场，季付30，每月低至￥10.00/月</a><br></li><li>🚀 <a href="https://mojie.app/#/register?code=sSdtPtLo" target="_blank" rel="noreferrer">魔戒：不限时，不限制使用人数，直至套餐流量用完，低至￥14.9/130G流量</a><br></li><li>🚀 <a href="https://love.52pokemon.cc/register?code=56ERkkxp" target="_blank" rel="noreferrer">宝可梦星云：新用户首单：9折优惠码：9999，低至5.9/月 </a><br></li><li>🚀 <a href="https://edu.uodoo.bid/auth/register?code=JMiOQDHf" target="_blank" rel="noreferrer">NanoCloud: 绑定TG机器人每天领取免费流量，月付最低1元/月</a><br></li><li>🚀 <a href="https://fchb1188.fcvipaff.cc/register?aff=X1vZd2wf" target="_blank" rel="noreferrer">肥猫云：全专线中转隧道，高速大宽带不限设备数，低至6元/月（年付）</a><br></li><li>🚀 <a href="https://homes.tr25.cn?code=ReCm" target="_blank" rel="noreferrer">疾风云：包年 6.9折 优惠码: jf2025</a><br></li><li>🚀 <a href="https://inv02.ffaff.cc/register?aff=WQApz2pv" target="_blank" rel="noreferrer">闪狐云：不限速，不限设备。高速专线。20元/月</a></li></ul></div><div class="warning custom-block"><p class="custom-block-title">💬 交流群</p><ul><li>🫂 Telegram:<a href="https://t.me/jichang360" target="_blank" rel="noreferrer">@jichang360</a></li></ul></div>`,29)]))}const u=e(r,[["render",l]]);export{g as __pageData,u as default};
